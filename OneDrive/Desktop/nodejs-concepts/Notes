Tools :
https://code.visualstudio.com/ >> Install
https://nodejs.org/en >> Install
https://git-scm.com/downloads >> Install
https://github.com/ >> Create Account

extension
> vscode-icons
> githistory
> gitlens
> spellcheck
> Eslint
> Tabnine

Chorme
> Json-viewer
(https://chrome.google.com/webstore/detail/json-viewer/gbmdgpbipfallnflgajpaliibnhdgobh)

Course Content :
NPM
Basic NodeJS(in built)(Os,file,http)
NodeJS(full Stack App) (Node-EJs-Mongo-Express)
Third Party Api (Weather Api)
Redis  > 6379
Node-Es6(.babel)
RedisWithMongo
ImageUpload
ImageUpload(formidable)
Email With Node(nodemailer)
MongoDb Basic >27017  (local/cloud)
Zomato App backend
Api with NodeJS(Rest)>1
Swagger
DashBoard(Crud)
Testing
Github
--Deployment of app---
render
Pm2
Nginx
Jenkins
Login/Logout(JWT)
Oauth(with github)
TelegramChat
GraphQl API
Paytm-Payment
Oauth(with google)
NodeJs with postgres
Chatapp
upload to s3 bucket
FIREBASE (npm i -g firebase)
Docker
GitActions
microservice(aws lambda)

Introduction :
NodeJs
> Single Thread, Async, Non Blocking I/O
>advantage of nodejs over java :
In java for mutliple thread were required for multiple request
will be difficult for maintaining the mutliple threads for garbage collector 
But in the nodejs single thread will be dealing with multiple requests so that 
we can conclude nodejs doesn't had any non-blocking and it is single thread,async and non-blocking I/O framework
It is open-source and makes javascript to run outside the browser runtime environment

Security vulnaribility :
Global and local company repos will be in between that security scanners . By Scanning the packages from global repos
and then only sent to local company repos with in installed packages of company repos also undergone the scanning process 
for achieving more security without any block when deploying them.
Npm :
> node package manager

2,348,877 number of packages will be and the number will be changed over time

Nexes repo

JSON
> JavaScript Object Notation
> Way to represent data
> Key value
[
    {
        "name":"John",
        "city":"Amsterdam"
    },
    {
        "name":"Nikita",
        "city":"London"
    },
    {
        "name":"Amar",
        "city":"Pune",
        "age":10
    }
]
It will work fine with two or more than two key values to the previous key values that means for one object 
there are two key values but for the third object there is addition of age key value eventhough with unstructured
addition of key values will not effect the execution of the code 

///package.json
> Entry point to app
> Contains packages used in app
> Script (start,test)
> Meta Data (name,version,description)

/* Step Generate to generate package.json */
** NodeJs must be installed in laptop
> go inside folder using terminal/cmd
> npm init
> Answer all questions
> type yes
>directly npm init -y - we can skip all the above questions

/* Step Generate to install package */
** NodeJs must be installed in laptop
> go inside folder using terminal/cmd
> npm i packagename/ npm install packagename

package-lock : 
> Dependency tree for the dependencies that are installed in the package.json 

node_modules :
> Contains all the packages you have installed in the project

.gitignore :
> What all things we don't want to push to git
npm i package@2.5.4

package-lock > Dependency tree
node_modules > Contains all the packages you have installed
.gitignore > What all things we dont want to push to git

local dependency
> Default installation
> they are local to the folder
> only used for specific folder

global dependency
> installed in the laptop
> can be used for any app
> only used before app start
> use to generate the app / run the app
> will not add in package.json
> need admin permission to install

dev dependency
> they are local to the folder
> only dependencies used at time of development

/* Step Generate to install dev dependency */
** NodeJs must be installed in laptop
> go inside folder using terminal/cmd
> npm i packagename --save-dev

callback in node :
A callback in Node is a non-blocking function that executes upon task completion, enabling asynchronous processing. It facilitates scalability by allowing Nodejs to handle multiple requests without waiting for operations to conclude, as exemplified in file I/O scenarios.

/////Step to install global package
#window
> open cmd as admin
> npm i -g nodemon

#mac /linux
> open terminal
> sudo npm i -g nodemon
.env file importance :
application will be run on mutliple servers like [dev,test,prod] for different applications
different port numbers will be opened and if we give any static number like port=3000 in one application
then rest of the other applications can not use the same port right bz that port is not opened for that application so that's the reason .env come into exist
>with the help .env variable  we can configure the port and many other sensitive data separately for different applications like .env.dev -->for dev application ,.env.test etc.,
>A/c to the application we will configure them to their respective application

Es5
Ecma Script
Es6
Ecma Script

var a = 10
"my age is "+a
"my age is 10"


var a = 10
`my age is ${a}`
"my age is 10"

appbk1.js : Why Express router?
IN ths file we make the route for category and products which will work fine but when we create the 
details route under the category and products with same name [Mutliple route under the one route title] it will fetch the data by first in first out basis which is not a good approach as a developers 
>> To over come the above we using the next level concept Express Router

Express Router :
With this we can create the multiple route under the one route title

 Middleware :
 These are the supporting libraries which help to more things to done for us in similar pattern
 we can maintain the logs of the applications by using middleware known as margon 

EJS :
stands for Embedded JavaScript Template 
it will 